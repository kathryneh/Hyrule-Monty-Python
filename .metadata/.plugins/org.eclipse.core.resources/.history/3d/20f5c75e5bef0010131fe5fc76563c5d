package avatars;

public class KnightAvatarCollection implements AvatarCollection {
	private int size = 0;
	final static int KAC_MAX_SIZE = 50;
	private TalkingKnightAvatar[] knightArray = new TalkingKnightAvatar[KAC_MAX_SIZE];
	private int x;
	private int y;

	public KnightAvatarCollection(int xloc, int yloc) {
		setX(xloc);
		setY(yloc);
		push();
		push();
		push();
		push();
		getAvatarArray();
	}

	@Override
	public void push() {
		if (size < KAC_MAX_SIZE) {
			knightArray[size] = new TalkingKnightAvatar(x+size*100+50, y+90);
			size++;
		} else {
			System.out.println("Chat history is full. Please first remove elements from the chat before continuing.");
		}
	}

	public int size() {
		return size;
	}

	public void pop() {
		if (size > 0) {
			
			for (int i=0; i<size; i++){
				(knightArray[i]).setX(200);
			}
			size--;
		} else {
			System.out.println("Chat history is empty. No elements to remove.");
		}
	}

	@Override
	public TalkingKnightAvatar[] getAvatarArray() {
		/*
		 * if (index>size){
		 * System.out.println("Not a valid index, please choose an index less than "
		 * + size); return null; }
		 */
		size = size();
		TalkingKnightAvatar[] marchingKnightArray = new TalkingKnightAvatar[size];
		for (int i = 0; i < size; i++) {
			marchingKnightArray[i] = knightArray[i];
		}
		//}
		//return marchingKnightArray;
		return marchingKnightArray;
	}

	public int getX() {
		return x;
	}
	
	public void pop(int index){
		(knightarray[index]).pop();
	}

	public void setX(int newVal) {
		x = newVal + x;
		for (int i=0; i<size; i++){
			TalkingKnightAvatar[] marchingKnightArray = getAvatarArray();
			(marchingKnightArray[i]).setX(newVal);
		}
	}

	public int getY() {
		return y;
	}

	public void setY(int newVal) {
		y = newVal + y;
		for (int i=0; i<size; i++){
			(knightArray[i]).setY(newVal);
		}
	}

	public void removeElement() {
		size = size();
		for (int i = 0; i < size; i++) {
			knightArray[i] = knightArray[i + 1];
		}
		size--;

	}
}
