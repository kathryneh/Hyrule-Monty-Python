package scanner;

public class IteratedScanner implements Iteratable<String> {
	int nextElementPos= 0;
	int endIndex;
	String string; 
	public IteratedScanner(String arg){
		string = arg;		
	}
	
	@Override
	public boolean hasNext() {
		return nextElementPos<string.length()-1;
	}

	@Override
	public String next() {
		skipWhiteSpace();
		int startIndex = nextElementPos;
		movePastCurrentToken();
		skipNonTokenCharacters();
		setEndIndex();
		endIndex = nextElementPos;
		String token = getToken(startIndex, endIndex);
		return token;
	}
	void setEndIndex(){
		if (string.charAt(nextElementPos) == ' '){
			endIndex = nextElementPos; 
		}
		else{
			endIndex = nextElementPos+1;
		}
	}
	
	void movePastCurrentToken() {
		nextElementPos++;
	} 
	
	void skipWhiteSpace(){
		if (string.charAt(nextElementPos) == ' '){
			nextElementPos++;
		}
	}
	
	void skipNonTokenCharacters(){
		System.out.println("String length:" + string.length());
		if (nextElementPos < string.length()-1){
		while(!isWhiteSpace(string.charAt(nextElementPos)) && nextElementPos<string.length()-2){
			nextElementPos++;
			System.out.println("Index" + nextElementPos);
		}
	}
	}
	
	String getToken(int start, int end){
		String token = string.substring(start, end);
		return token;
	}
	
	boolean isWhiteSpace(char s){
		if (s==' '){
			return true;
		}
		else{
			return false;
		}
	}

	public void setInput(String localInputString) {
		string = localInputString;
		nextElementPos = 0;
		
		
	}
	

}
