package bus.uigen.widgets;import bus.uigen.distributed.client.ActionEventForwarder;public class ButtonSelector  {	public static final String COMMAND= ".create(";		static ButtonFactory factory;	//static PanelFactory factory = new AWTPanelFactory();
	  public static void setButtonFactory (ButtonFactory newVal) {
		factory = newVal;  }        public static  VirtualButton createButton(String text) {	  String widgetID = VirtualToolkit.getObjectID(VirtualButton.class);	  VirtualButton toReturn = execCreate(widgetID, text);	  if(VirtualToolkit.isDistributed()){		  String command = VirtualButton.COMMAND_LABEL+ widgetID + COMMAND + text +")";		  VirtualToolkit.sendCommand(command);	  }	  	  return toReturn;  }    public static VirtualButton execCreate(String widgetID, String text){	  if(!VirtualToolkit.containObjID(widgetID)){		  VirtualButton toReturn = factory.createButton(text);		  if(widgetID != null){			  VirtualToolkit.associate(widgetID, toReturn);			  toReturn.setID(widgetID);		  }		  if(VirtualToolkit.isDistributed()){			  toReturn.addActionListener(new ActionEventForwarder(toReturn));		  }		  return toReturn;	  }else{		  return (VirtualButton) VirtualToolkit.getObjectByID(widgetID);	  }  }    public static  VirtualButton createButton() {	  String widgetID = VirtualToolkit.getObjectID(VirtualButton.class);	  VirtualButton toReturn = execCreate(widgetID);	  if(VirtualToolkit.isDistributed()){		  String command = VirtualButton.COMMAND_LABEL+ widgetID + COMMAND +")";		  VirtualToolkit.sendCommand(command);	  }	  	  return toReturn;  }    public static VirtualButton execCreate(String widgetID){	  if(!VirtualToolkit.containObjID(widgetID)){		  VirtualButton toReturn = factory.createButton();		  if(widgetID != null){			  VirtualToolkit.associate(widgetID, toReturn);			  toReturn.setID(widgetID);		  }		  if(VirtualToolkit.isDistributed()){			  toReturn.addActionListener(new ActionEventForwarder(toReturn));		  }		  return toReturn;	  }else{		  return (VirtualButton) VirtualToolkit.getObjectByID(widgetID);	  }  }      public static  VirtualButton createButton (Object icon) {	  return factory.createButton(icon);	    }
}